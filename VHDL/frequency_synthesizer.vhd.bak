LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.all;
ENTITY frequency_synthesizer IS
	PORT(
		SW: IN STD_LOGIC_VECTOR(17 DOWNTO 0);
		KEY: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
		DA: OUT STD_LOGIC_VECTOR(13 DOWNTO 0);
		FPGA_CLK_A_N: INOUT STD_LOGIC;
		FPGA_CLK_A_P: INOUT STD_LOGIC;
		FPGA_CLK_B_P: INOUT STD_LOGIC;
		FPGA_CLK_B_N: INOUT STD_LOGIC;
		LEDG: OUT STD_LOGIC_VECTOR(8 DOWNTO 0);
		LEDR: OUT STD_LOGIC_VECTOR(17 DOWNTO 0);
		OSC_50: IN STD_LOGIC_VECTOR(2 DOWNTO 0)
		);
END frequency_synthesizer;

ARCHITECTURE arch_frequency_synthesizer OF frequency_synthesizer IS
	
	COMPONENT phase_accumulator IS
		PORT(
			FREQUENCY: IN STD_LOGIC_VECTOR(22 DOWNTO 0);
			CLK :IN STD_LOGIC;
			RST: IN STD_LOGIC;
			PHASE: OUT STD_LOGIC_VECTOR(22 DOWNTO 0)
		);
	END COMPONENT;
	
	COMPONENT quantiser_23_to_6_msb IS
		PORT(
			X: IN STD_LOGIC_VECTOR(22 DOWNTO 0);
			Y: OUT STD_LOGIC_VECTOR(5 DOWNTO 0)
		);
	END COMPONENT;
	
		signal s_frequency: STD_LOGIC_VECTOR(22 DOWNTO 0);
		signal s_phase: STD_LOGIC_VECTOR(22 DOWNTO 0);
		signal s_quant: STD_LOGIC_VECTOR(5 DOWNTO 0);
		signal s_rst: STD_LOGIC;
		signal s_clk: STD_LOGIC;
begin
	s_clk <= OSC_50(0);
	s_rst <= not(KEY(0));
	
	
	b: phase_accumulator PORT MAP(
		s_frequency, s_clk, s_rst, s_phase
	);
	
END ARCHITECTURE;