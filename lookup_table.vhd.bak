LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

ENTITY lookup_table IS
	PORT(
		X: IN STD_LOGIC_VECTOR(7 DOWNTO 0);
		Y: OUT STD_LOGIC_VECTOR(12 DOWNTO 0)
		);
END lookup_table;

ARCHITECTURE arch_lookup_table OF lookup_table IS
begin

process(x) is
begin
	case x is
	when "00000000" => y <= "0000000000000";
	when "00000001" => y <= "0000000110010";
	when "00000010" => y <= "0000001100100";
	when "00000011" => y <= "0000010010110";
	when "00000100" => y <= "0000011001001";
	when "00000101" => y <= "0000011111011";
	when "00000110" => y <= "0000100101101";
	when "00000111" => y <= "0000101011111";
	when "00001000" => y <= "0000110010001";
	when "00001001" => y <= "0000111000100";
	when "00001010" => y <= "0000111110110";
	when "00001011" => y <= "0001000101000";
	when "00001100" => y <= "0001001011010";
	when "00001101" => y <= "0001010001100";
	when "00001110" => y <= "0001010111110";
	when "00001111" => y <= "0001011110000";
	when "00010000" => y <= "0001100100010";
	when "00010001" => y <= "0001101010100";
	when "00010010" => y <= "0001110000110";
	when "00010011" => y <= "0001110111000";
	when "00010100" => y <= "0001111101010";
	when "00010101" => y <= "0010000011100";
	when "00010110" => y <= "0010001001110";
	when "00010111" => y <= "0010010000000";
	when "00011000" => y <= "0010010110010";
	when "00011001" => y <= "0010011100011";
	when "00011010" => y <= "0010100010101";
	when "00011011" => y <= "0010101000110";
	when "00011100" => y <= "0010101111000";
	when "00011101" => y <= "0010110101010";
	when "00011110" => y <= "0010111011011";
	when "00011111" => y <= "0011000001100";
	when "00100000" => y <= "0011000111110";
	when "00100001" => y <= "0011001101111";
	when "00100010" => y <= "0011010100000";
	when "00100011" => y <= "0011011010001";
	when "00100100" => y <= "0011100000010";
	when "00100101" => y <= "0011100110011";
	when "00100110" => y <= "0011101100100";
	when "00100111" => y <= "0011110010101";
	when "00101000" => y <= "0011111000110";
	when "00101001" => y <= "0011111110111";
	when "00101010" => y <= "0100000100111";
	when "00101011" => y <= "0100001011000";
	when "00101100" => y <= "0100010001000";
	when "00101101" => y <= "0100010111001";
	when "00101110" => y <= "0100011101001";
	when "00101111" => y <= "0100100011001";
	when "00110000" => y <= "0100101001010";
	when "00110001" => y <= "0100101111010";
	when "00110010" => y <= "0100110101010";
	when "00110011" => y <= "0100111011001";
	when "00110100" => y <= "0101000001001";
	when "00110101" => y <= "0101000111001";
	when "00110110" => y <= "0101001101000";
	when "00110111" => y <= "0101010011000";
	when "00111000" => y <= "0101011000111";
	when "00111001" => y <= "0101011110111";
	when "00111010" => y <= "0101100100110";
	when "00111011" => y <= "0101101010101";
	when "00111100" => y <= "0101110000100";
	when "00111101" => y <= "0101110110011";
	when "00111110" => y <= "0101111100001";
	when "00111111" => y <= "0110000010000";
	when "01000000" => y <= "0110000111110";
	when "01000001" => y <= "0110001101101";
	when "01000010" => y <= "0110010011011";
	when "01000011" => y <= "0110011001001";
	when "01000100" => y <= "0110011110111";
	when "01000101" => y <= "0110100100101";
	when "01000110" => y <= "0110101010011";
	when "01000111" => y <= "0110110000001";
	when "01001000" => y <= "0110110101110";
	when "01001001" => y <= "0110111011011";
	when "01001010" => y <= "0111000001001";
	when "01001011" => y <= "0111000110110";
	when "01001100" => y <= "0111001100011";
	when "01001101" => y <= "0111010010000";
	when "01001110" => y <= "0111010111100";
	when "01001111" => y <= "0111011101001";
	when "01010000" => y <= "0111100010101";
	when "01010001" => y <= "0111101000001";
	when "01010010" => y <= "0111101101110";
	when "01010011" => y <= "0111110011010";
	when "01010100" => y <= "0111111000101";
	when "01010101" => y <= "0111111110001";
	when "01010110" => y <= "1000000011100";
	when "01010111" => y <= "1000001001000";
	when "01011000" => y <= "1000001110011";
	when "01011001" => y <= "1000010011110";
	when "01011010" => y <= "1000011001001";
	when "01011011" => y <= "1000011110100";
	when "01011100" => y <= "1000100011110";
	when "01011101" => y <= "1000101001001";
	when "01011110" => y <= "1000101110011";
	when "01011111" => y <= "1000110011101";
	when "01100000" => y <= "1000111000111";
	when "01100001" => y <= "1000111110000";
	when "01100010" => y <= "1001000011010";
	when "01100011" => y <= "1001001000011";
	when "01100100" => y <= "1001001101101";
	when "01100101" => y <= "1001010010110";
	when "01100110" => y <= "1001010111110";
	when "01100111" => y <= "1001011100111";
	when "01101000" => y <= "1001100001111";
	when "01101001" => y <= "1001100111000";
	when "01101010" => y <= "1001101100000";
	when "01101011" => y <= "1001110001000";
	when "01101100" => y <= "1001110101111";
	when "01101101" => y <= "1001111010111";
	when "01101110" => y <= "1001111111110";
	when "01101111" => y <= "1010000100101";
	when "01110000" => y <= "1010001001100";
	when "01110001" => y <= "1010001110011";
	when "01110010" => y <= "1010010011010";
	when "01110011" => y <= "1010011000000";
	when "01110100" => y <= "1010011100110";
	when "01110101" => y <= "1010100001100";
	when "01110110" => y <= "1010100110010";
	when "01110111" => y <= "1010101011000";
	when "01111000" => y <= "1010101111101";
	when "01111001" => y <= "1010110100010";
	when "01111010" => y <= "1010111000111";
	when "01111011" => y <= "1010111101100";
	when "01111100" => y <= "1011000010000";
	when "01111101" => y <= "1011000110101";
	when "01111110" => y <= "1011001011001";
	when "01111111" => y <= "1011001111100";
	when "10000000" => y <= "1011010100000";
	when "10000001" => y <= "1011011000100";
	when "10000010" => y <= "1011011100111";
	when "10000011" => y <= "1011100001010";
	when "10000100" => y <= "1011100101101";
	when "10000101" => y <= "1011101001111";
	when "10000110" => y <= "1011101110001";
	when "10000111" => y <= "1011110010100";
	when "10001000" => y <= "1011110110101";
	when "10001001" => y <= "1011111010111";
	when "10001010" => y <= "1011111111000";
	when "10001011" => y <= "1100000011010";
	when "10001100" => y <= "1100000111011";
	when "10001101" => y <= "1100001011011";
	when "10001110" => y <= "1100001111100";
	when "10001111" => y <= "1100010011100";
	when "10010000" => y <= "1100010111100";
	when "10010001" => y <= "1100011011100";
	when "10010010" => y <= "1100011111011";
	when "10010011" => y <= "1100100011011";
	when "10010100" => y <= "1100100111010";
	when "10010101" => y <= "1100101011000";
	when "10010110" => y <= "1100101110111";
	when "10010111" => y <= "1100110010101";
	when "10011000" => y <= "1100110110011";
	when "10011001" => y <= "1100111010001";
	when "10011010" => y <= "1100111101111";
	when "10011011" => y <= "1101000001100";
	when "10011100" => y <= "1101000101001";
	when "10011101" => y <= "1101001000110";
	when "10011110" => y <= "1101001100011";
	when "10011111" => y <= "1101001111111";
	when "10100000" => y <= "1101010011011";
	when "10100001" => y <= "1101010110111";
	when "10100010" => y <= "1101011010010";
	when "10100011" => y <= "1101011101110";
	when "10100100" => y <= "1101100001001";
	when "10100101" => y <= "1101100100011";
	when "10100110" => y <= "1101100111110";
	when "10100111" => y <= "1101101011000";
	when "10101000" => y <= "1101101110010";
	when "10101001" => y <= "1101110001100";
	when "10101010" => y <= "1101110100101";
	when "10101011" => y <= "1101110111110";
	when "10101100" => y <= "1101111010111";
	when "10101101" => y <= "1101111110000";
	when "10101110" => y <= "1110000001000";
	when "10101111" => y <= "1110000100000";
	when "10110000" => y <= "1110000111000";
	when "10110001" => y <= "1110001010000";
	when "10110010" => y <= "1110001100111";
	when "10110011" => y <= "1110001111110";
	when "10110100" => y <= "1110010010101";
	when "10110101" => y <= "1110010101011";
	when "10110110" => y <= "1110011000001";
	when "10110111" => y <= "1110011010111";
	when "10111000" => y <= "1110011101101";
	when "10111001" => y <= "1110100000010";
	when "10111010" => y <= "1110100010111";
	when "10111011" => y <= "1110100101100";
	when "10111100" => y <= "1110101000001";
	when "10111101" => y <= "1110101010101";
	when "10111110" => y <= "1110101101001";
	when "10111111" => y <= "1110101111101";
	when "11000000" => y <= "1110110010000";
	when "11000001" => y <= "1110110100011";
	when "11000010" => y <= "1110110110110";
	when "11000011" => y <= "1110111001000";
	when "11000100" => y <= "1110111011011";
	when "11000101" => y <= "1110111101101";
	when "11000110" => y <= "1110111111110";
	when "11000111" => y <= "1111000010000";
	when "11001000" => y <= "1111000100001";
	when "11001001" => y <= "1111000110001";
	when "11001010" => y <= "1111001000010";
	when "11001011" => y <= "1111001010010";
	when "11001100" => y <= "1111001100010";
	when "11001101" => y <= "1111001110010";
	when "11001110" => y <= "1111010000001";
	when "11001111" => y <= "1111010010000";
	when "11010000" => y <= "1111010011111";
	when "11010001" => y <= "1111010101101";
	when "11010010" => y <= "1111010111011";
	when "11010011" => y <= "1111011001001";
	when "11010100" => y <= "1111011010111";
	when "11010101" => y <= "1111011100100";
	when "11010110" => y <= "1111011110001";
	when "11010111" => y <= "1111011111110";
	when "11011000" => y <= "1111100001010";
	when "11011001" => y <= "1111100010110";
	when "11011010" => y <= "1111100100010";
	when "11011011" => y <= "1111100101101";
	when "11011100" => y <= "1111100111000";
	when "11011101" => y <= "1111101000011";
	when "11011110" => y <= "1111101001110";
	when "11011111" => y <= "1111101011000";
	when "11100000" => y <= "1111101100010";
	when "11100001" => y <= "1111101101100";
	when "11100010" => y <= "1111101110101";
	when "11100011" => y <= "1111101111110";
	when "11100100" => y <= "1111110000111";
	when "11100101" => y <= "1111110001111";
	when "11100110" => y <= "1111110010111";
	when "11100111" => y <= "1111110011111";
	when "11101000" => y <= "1111110100111";
	when "11101001" => y <= "1111110101110";
	when "11101010" => y <= "1111110110101";
	when "11101011" => y <= "1111110111100";
	when "11101100" => y <= "1111111000010";
	when "11101101" => y <= "1111111001000";
	when "11101110" => y <= "1111111001110";
	when "11101111" => y <= "1111111010011";
	when "11110000" => y <= "1111111011000";
	when "11110001" => y <= "1111111011101";
	when "11110010" => y <= "1111111100001";
	when "11110011" => y <= "1111111100101";
	when "11110100" => y <= "1111111101001";
	when "11110101" => y <= "1111111101101";
	when "11110110" => y <= "1111111110000";
	when "11110111" => y <= "1111111110011";
	when "11111000" => y <= "1111111110110";
	when "11111001" => y <= "1111111111000";
	when "11111010" => y <= "1111111111010";
	when "11111011" => y <= "1111111111100";
	when "11111100" => y <= "1111111111101";
	when "11111101" => y <= "1111111111110";
	when "11111110" => y <= "1111111111111";
	when "11111111" => y <= "1111111111111";
	when others => y <= "1111111111111";
	end case;
end process;
END ARCHITECTURE;